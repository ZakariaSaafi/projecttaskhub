#!/bin/bash
# task-service/build.sh - Script de build pour Task Service

echo "üèóÔ∏è  Construction du Task Service..."

# V√©rifier que Maven est install√©
if ! command -v mvn &> /dev/null; then
    echo "‚ùå Maven n'est pas install√©"
    exit 1
fi

# Nettoyer les anciens builds
echo "üßπ Nettoyage..."
mvn clean

# Compiler et packager
echo "üì¶ Compilation et packaging..."
mvn package -DskipTests

# V√©rifier que le JAR a √©t√© cr√©√©
if [ -f "target/task-service-1.0.0.jar" ]; then
    echo "‚úÖ task-service-1.0.0.jar cr√©√© avec succ√®s"
    echo "üìä Taille du JAR: $(du -h target/task-service-1.0.0.jar | cut -f1)"
else
    echo "‚ùå Erreur: JAR non cr√©√©"
    exit 1
fi

echo "üéâ Build termin√© avec succ√®s!"

---

#!/bin/bash
# task-service/run-local.sh - Script pour ex√©cuter localement

echo "üöÄ D√©marrage du Task Service en local..."

# V√©rifier que le JAR existe
if [ ! -f "target/task-service-1.0.0.jar" ]; then
    echo "‚ùå JAR non trouv√©. Ex√©cutez d'abord ./build.sh"
    exit 1
fi

# Variables d'environnement pour le d√©veloppement local
export SPRING_PROFILES_ACTIVE=dev
export SPRING_DATA_MONGODB_URI=mongodb://localhost:27017/taskdb
export SPRING_RABBITMQ_HOST=localhost
export SPRING_RABBITMQ_PORT=5672
export SPRING_RABBITMQ_USERNAME=guest
export SPRING_RABBITMQ_PASSWORD=guest
export EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://localhost:8761/eureka/
export SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://localhost:8180/realms/projecttaskhub

echo "üîß Configuration:"
echo "   - Profil: $SPRING_PROFILES_ACTIVE"
echo "   - MongoDB: $SPRING_DATA_MONGODB_URI"
echo "   - RabbitMQ: $SPRING_RABBITMQ_HOST:$SPRING_RABBITMQ_PORT"
echo "   - Eureka: $EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE"

# D√©marrer l'application
echo "üèÉ‚Äç‚ôÇÔ∏è D√©marrage de l'application..."
java -jar target/task-service-1.0.0.jar

---

#!/bin/bash
# task-service/test.sh - Script de test

echo "üß™ Ex√©cution des tests du Task Service..."

# Tests unitaires
echo "üî¨ Tests unitaires..."
mvn test

# Tests d'int√©gration (n√©cessite MongoDB et RabbitMQ)
echo "üîó Tests d'int√©gration..."
mvn verify -P integration-tests

echo "‚úÖ Tests termin√©s!"

---

#!/bin/bash
# task-service/docker-build.sh - Script de build Docker

echo "üê≥ Construction de l'image Docker pour Task Service..."

# Build Maven d'abord
./build.sh

# Build de l'image Docker
echo "üèóÔ∏è  Construction de l'image Docker..."
docker build -t projecttaskhub/task-service:latest .

# V√©rifier que l'image a √©t√© cr√©√©e
if docker images | grep -q "projecttaskhub/task-service"; then
    echo "‚úÖ Image Docker cr√©√©e avec succ√®s"
    docker images | grep "projecttaskhub/task-service"
else
    echo "‚ùå Erreur lors de la cr√©ation de l'image Docker"
    exit 1
fi

echo "üéâ Image Docker pr√™te!"

---

#!/bin/bash
# task-service/docker-run.sh - Script pour ex√©cuter avec Docker

echo "üê≥ D√©marrage du Task Service avec Docker..."

# Arr√™ter le conteneur existant s'il existe
docker stop task-service 2>/dev/null || true
docker rm task-service 2>/dev/null || true

# D√©marrer le nouveau conteneur
docker run -d \
  --name task-service \
  --network projecttaskhub-network \
  -p 8082:8082 \
  -e SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/taskdb \
  -e SPRING_RABBITMQ_HOST=rabbitmq \
  -e SPRING_RABBITMQ_PORT=5672 \
  -e SPRING_RABBITMQ_USERNAME=guest \
  -e SPRING_RABBITMQ_PASSWORD=guest \
  -e EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://discovery-server:8761/eureka/ \
  -e SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://keycloak:8080/realms/projecttaskhub \
  projecttaskhub/task-service:latest

echo "‚úÖ Task Service d√©marr√© avec Docker"
echo "üìã Logs: docker logs -f task-service"
echo "üåê Health: http://localhost:8082/actuator/health"